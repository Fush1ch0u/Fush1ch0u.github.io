
[{"content":"","date":"2025-05-01","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"2025-05-01","externalUrl":null,"permalink":"/tags/blog/","section":"文章標籤🏷️","summary":"","title":"Blog","type":"tags"},{"content":" 太喜歡倒騰了，博客暫時沒什麼有趣內容我卻打算針對blowfish的主題自定義做個筆記，踩了太多坑了。\n（有糾結要不要一個筆記發一篇文，看我這個廢話程度，我覺得\u0026hellip;也不是沒可能。）\n給文章外鏈加上圖標 # Stack主題用家可直接參照Kyo老師的博文 Hugo Stack主题装修笔记 ，簡潔明瞭相當實用。\n不過 Blowfish 和 Stack 有些不同，在此基礎上對 render-link.html 做一些小修改：\n\u0026lt;a href=\u0026#34;{{ .Destination | safeURL }}\u0026#34; {{- with .Title -}} title=\u0026#34;{{ . }}\u0026#34; {{- end }} {{- if or (strings.HasPrefix .Destination \u0026#34;http:\u0026#34;) (strings.HasPrefix .Destination \u0026#34;https:\u0026#34;) }} target=\u0026#34;_blank\u0026#34;{{ end }}\u0026gt; {{- .Text | safeHTML -}} {{ if strings.HasPrefix .Destination \u0026#34;http\u0026#34; }} \u0026lt;span style=\u0026#34;display: inline-block; margin-left: -0.1em; font-size: inherit; line-height: 1;\u0026#34;\u0026gt; \u0026lt;svg width=\u0026#34;0.8em\u0026#34; height=\u0026#34;0.8em\u0026#34; viewBox=\u0026#34;0 0 21 21\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; style=\u0026#34;fill: currentColor;\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z\u0026#34; /\u0026gt; \u0026lt;path d=\u0026#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z\u0026#34;/\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;/span\u0026gt; {{ end }} \u0026lt;/a\u0026gt; 修改點主要在 width 和 height，且增加了display: inline-block;這一句，使圖標和文字保持在一行。如還需要讓鼠標移動到外鏈時改變顏色，那麽請繼續往下看：\n增加鼠標懸停變色效果 # 如果像我一樣需要針對淺色/深色模式做兩種變色效果，第一步，可以先把 render-link.html 代碼修改如下：\n\u0026lt;a class=\u0026#34;external-link\u0026#34; href=\u0026#34;{{ .Destination | safeURL }}\u0026#34; {{- with .Title }} title=\u0026#34;{{ . }}\u0026#34;{{- end }} {{- if or (strings.HasPrefix .Destination \u0026#34;http://\u0026#34;) (strings.HasPrefix .Destination \u0026#34;https://\u0026#34;) }} target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34;{{ end }}\u0026gt; {{- .Text | safeHTML }} {{- if or (strings.HasPrefix .Destination \u0026#34;http://\u0026#34;) (strings.HasPrefix .Destination \u0026#34;https://\u0026#34;) }} \u0026lt;span class=\u0026#34;external-icon\u0026#34;\u0026gt; \u0026lt;svg class=\u0026#34;external-icon-svg\u0026#34; viewBox=\u0026#34;0 0 21 21\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; aria-hidden=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z\u0026#34;/\u0026gt; \u0026lt;path d=\u0026#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z\u0026#34;/\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;/span\u0026gt; {{- end }} \u0026lt;/a\u0026gt; 這裡主要是兩點：\n給鏈接、圖標都用了一樣的class，.external-icon來控制圖標容器（位置/大小/對齊），.external-icon-svg控制其中的svg（顏色/懸停/其他效果），當然用其他名字也都可以。 用 css 來統一修改顏色及其他樣式。 接下來在你的博客文件夾/assets/css/custom.css 中添加以下代碼：\n/* 修改 外链及icon 相关颜色 */ /* 外链图标链接整体样式 */ .external-link { text-decoration: none; } .external-link:hover { color: rgb(var(--color-neutral-300));/* 浅色模式 */ } html.dark .external-link:hover { color: rgb(var(--color-neutral-200));/* 深色模式 */ } /* 外链图标本体对齐 + 间距 */ .external-icon { display: inline-block; margin-left: -0.08em; /* 控制图标和外链的间距 */ line-height: 1; } /* SVG 大小和颜色适配文字 */ .external-icon-svg { width: 0.8em; height: 0.8em; fill: currentColor; transition: fill 0.2s ease; } 我這裡的兩個顏色值是根據自己的主題配色來的，如果讀者朋友有自己的配色方案，改color屬性即可。\n博客整體配色方案的更改可見另一篇博文：\nBlog｜更改Hugo Blowfish主題配色 指定Hugo時區 # Hugo 默認是 UTC 時間而不是東八區時間，有時候寫了文章會被hugo判定文章來自「未來」，所以不會顯示在文章列表裡。 在博客文件夾/config/_default/hugo.toml中加入下面這行代碼即可：\ntimeZone = \u0026#34;Asia/Shanghai\u0026#34; 當然也可以文章加時間戳，但我覺得沒必要，後面要顯示「最後編輯時間」時再修改。\n自定義footer文字\u0026amp;渲染修正 # 首先，原本 layouts/partials/footer.html 部分版權信息的代碼是這樣的： 點我展開 {{/* Copyright */}} {{ if .Site.Params.footer.showCopyright | default true }} \u0026lt;p class=\u0026#34;text-sm text-neutral-500 dark:text-neutral-400\u0026#34;\u0026gt; {{- with replace .Site.Params.copyright \u0026#34;{ year }\u0026#34; now.Year }} {{ . | markdownify }} {{- else }} \u0026amp;copy; {{ now.Format \u0026#34;2006\u0026#34; }} {{ .Site.Params.Author.name | markdownify }} {{- end }} \u0026lt;/p\u0026gt; {{ end }} 一般情況下，如果什麼都不寫，footer區域會自動顯示為© 2025。\n如要實現©符號前的文字自定義，則需要：\n修改hugo.toml # 我在 footer.html 中加了一句 copyright 的內容：\n東井 © 2025 · Please Don\u0026#39;t Reblog or Repost Without Asking Permission 要實現這樣的效果，只需要在 博客文件夾/config/_default/params.toml 文件末加一句如下代碼即可：\n# 修改版权信息 copyright = \u0026#34;網站名稱 \u0026amp;copy; { year } · Please Don\u0026#39;t Reblog or Repost Without Asking Permission\u0026#34; description = \u0026#34;網站描述\u0026#34; year會自動替換為當前年份，其他部分均可以自定義。 這裡不加在 hugo.toml 中是為了方便管理，hugo.toml 是 hugo 讀取的內容， 而針對主題 Blowfish的修改通過 params.toml實現。 新的問題出現：\nDon't的單引號一度顯示為全角符號的方括號』，怎麼修改都找不到位置，讓我百思不得其解。\n後來我想了一下，大概是因為我的languages.zh.toml文件中設置了isoCode = \u0026quot;zh\u0026quot;，又或者是因為我的字體使用順序是繁體\u0026gt;簡體\u0026gt;英文導致默認使用了繁體標點（我已實驗過，字體是可以正常顯示英文符號的），總之結論像是 markdown 渲染的時候莫名其妙把我的標點符號給替換了。\n那麼接下來就需要：\n修正標點符號的渲染 # 解決方式有兩種：\n用 html 實寫單引號\n博客名 © 2025 · Please Don\u0026amp;#39;t Reblog or Repost Without Asking Permission 這樣渲染之後應該就ok了。\n修改 Markdownify 屬性\n涉及到單引號的部分都這麼一個個修改也太麻煩，還可以嘗試的另一條路是：\n針對版權信息部分去除markdownify，修改為safeHTML，讓他別這麼自動轉換了。\n{{- with replace .Site.Params.copyright \u0026#34;{ year }\u0026#34; now.Year }} {{ . | markdownify }} \u0026lt;!-- 这里改成 safeHTML --\u0026gt; {{- else }} © {{ now.Format \u0026#34;2006\u0026#34; }} {{ .Site.Params.Author.name | markdownify }} \u0026lt;!-- 这里也改成 safeHTML --\u0026gt; {{- end }} 這樣就可以確保自定義的footer文字和渲染都是正確的了。\n代碼塊設置為MacOS風格 # 還是參考了Kyo老師的博文 Hugo Stack主题装修笔记Part3 ，感謝。\n先開始一直報錯沒想到如此簡單就適配了Blowfish。效果見下方折疊區。\n將如下代碼插入到/custom.css後面：\n點我展開 /* 代码块容器样式 */ .highlight { max-width: 100%; position: relative; border-radius: 10px; margin-left: -5px; margin-right: -10px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); overflow: hidden; } /* 添加 macOS 风格的标题栏 */ .highlight::before { content: \u0026#39;\u0026#39;; height: 30px; width: 100%; background: #f0f0f0; display: block; border-bottom: 1px solid #ddd; position: relative; } /* 深色模式下的标题栏样式 */ .dark .highlight::before { background: #0e220f; border-bottom: 1px solid #404040; } /* 添加控制按钮 */ .highlight::after { content: \u0026#39;\u0026#39;; position: absolute; top: 9px; left: 13px; width: 12px; height: 12px; border-radius: 50%; background-color: #ff5f56; box-shadow: 20px 0 0 #ffbd2e, 40px 0 0 #27c93f; z-index: 1; } /* 代码块内容区域样式 */ .highlight pre { margin: 0; padding: 1.5rem; width: auto; } .prose .chroma { border-radius: 0; } /* 代码块复制按钮样式 */ .copy-button { height: 30px; } .highlight:hover .copyCodeButton { opacity: 1; } 做法稍微有些不同是我這裡直接插入css代碼來做那三個按鈕了。\n另外就是為了適配當前深色模式下的博客配色，深色模式下的MacOS标题栏顏色也有加深，可根據實際情況進行修改。\n代碼塊文本高亮 # 很多其他hugo主題都內置了代碼高亮，而Blowfish 本身的高亮有點讓人迷茫。我個人是沒找到能否換配色方案，所以就自行更換了。\n定位至博客所在文件夾，執行如下命令：\n# 生成亮色主题样式 hugo gen chromastyles --style=github \u0026gt; assets/css/syntax-light.css # 生成暗色主题样式 hugo gen chromastyles --style=monokai \u0026gt; assets/css/syntax-dark.css 然後在layouts/partials文件夾下新建extend-head.html，輸入以下內容，引入這兩個代碼塊高亮方案：\n{{ $syntaxLight := resources.Get \u0026#34;css/syntax-light.css\u0026#34; }} {{ $syntaxDark := resources.Get \u0026#34;css/syntax-dark.css\u0026#34; }} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ $syntaxLight.RelPermalink }}\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ $syntaxDark.RelPermalink }}\u0026#34;\u0026gt; 刷新博客即可。\n當然也可以把兩個css放在static/css下，引用就不需要這麼複雜了。\n給文章增加簡繁切換按鈕 # 這個功能也是看似無用但我一直想加。效果大概如圖：\n原意是放在文章信息旁邊，這樣點擊按鈕之後就會將整個頁面切換為簡體。再點一下即可切換回繁體。\n轉換也不僅限於繁體頁面，若是簡體中文書寫的頁面也會自動識別，確定為簡體中文後按鈕就會顯示\u0026quot;簡體中文\u0026quot;。\nbug也有：\n我希望內容是簡體時，按鈕顯示「简体中文」而非繁體，但這是寫死在blowfish模版裡的，我主題語言指定是繁體，這裡就註定是繁體（笑）。 twikoo部分字詞轉換不完整（e.g. 暱稱/暱称） 分為幾個步驟。\n在 layouts/partials/basic.html 中新增一段代碼。因為要把按鈕放在文章信息欄，所以加在那一長串 partials的後面。我是加在了zen-mode這一段的後面 {{ if and (eq $scope \u0026#34;single\u0026#34;) (.Params.showZenMode | default (.Site.Params.article.showZenMode | default false)) }} {{ $meta.Add \u0026#34;partials\u0026#34; (slice (partial \u0026#34;meta/zen-mode.html\u0026#34; .)) }} {{ end }} 在這段代碼後新增如下代碼：\n\u0026lt;!--新增简繁切换功能--\u0026gt; {{ if eq $scope \u0026#34;single\u0026#34; }} {{ $meta.Add \u0026#34;partials\u0026#34; (slice (partial \u0026#34;meta/language-switch.html\u0026#34; .)) }} {{ end }} 在 layouts/partials/meta 文件夹下新建 language-switch.html，代码如下：\n點我展開 \u0026lt;span class=\u0026#34;inline-flex items-center\u0026#34;\u0026gt; \u0026lt;button id=\u0026#34;langToggleBtn\u0026#34; class=\u0026#34;lang-btn\u0026#34; title=\u0026#34;切換語言\u0026#34; aria-label=\u0026#34;切換語言\u0026#34; \u0026gt; \u0026lt;span id=\u0026#34;langLabel\u0026#34;\u0026gt;語言\u0026lt;/span\u0026gt;\u0026lt;!-- 临时 placeholder，由 JS 替换 --\u0026gt; \u0026lt;!-- 翻译图标 --\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; width=\u0026#34;1em\u0026#34; height=\u0026#34;1em\u0026#34; viewBox=\u0026#34;0 0 24 24\u0026#34; fill=\u0026#34;none\u0026#34; stroke=\u0026#34;currentColor\u0026#34; stroke-width=\u0026#34;2\u0026#34; stroke-linecap=\u0026#34;round\u0026#34; stroke-linejoin=\u0026#34;round\u0026#34; class=\u0026#34;translate-icon\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;m5 8 6 6\u0026#34; /\u0026gt; \u0026lt;path d=\u0026#34;m4 14 6-6 2-3\u0026#34; /\u0026gt; \u0026lt;path d=\u0026#34;M2 5h12\u0026#34; /\u0026gt; \u0026lt;path d=\u0026#34;M7 2h1\u0026#34; /\u0026gt; \u0026lt;path d=\u0026#34;m22 22-5-10-5 10\u0026#34; /\u0026gt; \u0026lt;path d=\u0026#34;M14 18h6\u0026#34; /\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;style\u0026gt; .lang-btn { display: flex; align-items: center; gap: 0.5rem; padding: 0.3rem 0.8rem; font-size: 0.875rem; border: 1px solid var(--color-neutral-300); border-radius: 0.5rem; background: var(--color-neutral-100); color: var(--color-neutral-900); cursor: pointer; } [data-dark-mode] .lang-btn { background: var(--color-neutral-800); color: var(--color-neutral-100); border-color: var(--color-neutral-600); } .lang-btn:hover { background: var(--color-neutral-200); } [data-dark-mode] .lang-btn:hover { background: var(--color-neutral-700); } \u0026lt;/style\u0026gt; 在 layouts/partials/footer.html 結尾的前加入一段：\n\u0026lt;!--增加opencc库--\u0026gt; \u0026lt;!-- 加载 opencc-js --\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/opencc-js@1.0.5/dist/umd/full.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- 加载你的 lang-toggle.js --\u0026gt; \u0026lt;script src=\u0026#34;/js/lang-toggle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 在 static/js 下新建 language-toggle.js 文件，代碼如下：\n點我展開 document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, () =\u0026gt; { const btn = document.getElementById(\u0026#34;langToggleBtn\u0026#34;); const label = document.getElementById(\u0026#34;langLabel\u0026#34;); if (!btn || !label) return; const langMap = { s: \u0026#34;cn\u0026#34;, t: \u0026#34;hk\u0026#34; }; let originalLang = \u0026#39;s\u0026#39;; // 默认简体 let currentLang = \u0026#39;s\u0026#39;; function detectInitialLang() { const text = document.body.innerText; const simplifiedChars = [\u0026#39;个\u0026#39;, \u0026#39;简\u0026#39;, \u0026#39;么\u0026#39;, \u0026#39;国\u0026#39;, \u0026#39;这\u0026#39;, \u0026#39;没\u0026#39;, \u0026#39;图\u0026#39;]; const traditionalChars = [\u0026#39;個\u0026#39;, \u0026#39;簡\u0026#39;, \u0026#39;麼\u0026#39;, \u0026#39;國\u0026#39;, \u0026#39;這\u0026#39;, \u0026#39;沒\u0026#39;, \u0026#39;圖\u0026#39;]; let simplifiedCount = 0; let traditionalCount = 0; simplifiedChars.forEach(char =\u0026gt; { if (text.includes(char)) simplifiedCount++; }); traditionalChars.forEach(char =\u0026gt; { if (text.includes(char)) traditionalCount++; }); return traditionalCount \u0026gt;= simplifiedCount ? \u0026#39;t\u0026#39; : \u0026#39;s\u0026#39;; } function updateButtonUI(lang) { if (lang === \u0026#39;s\u0026#39;) { label.textContent = \u0026#34;简体中文\u0026#34;; btn.title = \u0026#34;当前为简体中文，切换为繁体中文\u0026#34;; } else { label.textContent = \u0026#34;繁體中文\u0026#34;; btn.title = \u0026#34;當前為繁體中文，切換為簡體中文\u0026#34;; } } // ✅ 延迟语言检测，确保内容渲染完成 setTimeout(() =\u0026gt; { originalLang = detectInitialLang(); currentLang = originalLang; updateButtonUI(currentLang); }, 200); // 200ms 延迟，一般足够等待 DOM 完全渲染 // ✅ 转换内容逻辑 setTimeout(() =\u0026gt; { const textNodes = []; const walker = document.createTreeWalker( document.body, NodeFilter.SHOW_TEXT, { acceptNode: function(node) { const el = node.parentElement; if (!el) return NodeFilter.FILTER_ACCEPT; // 避免转换语言按钮上的所有文本 if ( el.closest(\u0026#39;#langToggleBtn\u0026#39;) || el.closest(\u0026#39;#langLabel\u0026#39;) ) { return NodeFilter.FILTER_REJECT; } // 排除网站标题 if ( el.closest(\u0026#39;.logo\u0026#39;) || el.closest(\u0026#39;a[href=\u0026#34;/\u0026#34;]\u0026#39;) || el.closest(\u0026#39;meta[property=\u0026#34;og:title\u0026#34;]\u0026#39;) ) { return NodeFilter.FILTER_REJECT; } return NodeFilter.FILTER_ACCEPT; } } ); while (walker.nextNode()) { textNodes.push({ node: walker.currentNode, originalText: walker.currentNode.textContent, convertedText: null }); } btn.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; { if (currentLang === originalLang) { const targetLang = originalLang === \u0026#39;s\u0026#39; ? \u0026#39;t\u0026#39; : \u0026#39;s\u0026#39;; const converter = OpenCC.Converter({ from: langMap[originalLang], to: langMap[targetLang] }); textNodes.forEach(item =\u0026gt; { if (item.convertedText === null) { item.convertedText = converter(item.originalText); } item.node.textContent = item.convertedText; }); currentLang = targetLang; } else { textNodes.forEach(item =\u0026gt; { item.node.textContent = item.originalText; }); currentLang = originalLang; } updateButtonUI(currentLang); }); }, 300); }); 注意點\n標題簡繁體意思大有不同，所以此處沒有把標題加入轉換範圍；\n個人習慣不喜歡台灣中文下的一些表達方式(e.g. 自行车vs腳踏車）所以選了hk，喜歡台灣中文的話將 const langMap = { s: \u0026quot;cn\u0026quot;, t: \u0026quot;hk\u0026quot; };這裡的hk改為tw即可大概就可以了。\n導航菜單也會隨之進行簡繁體轉化，如果博客標題+導航菜單均不需要變化，那也可以照抄下面這個js文件（直接替換即可）：\n點我展開 document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, () =\u0026gt; { const btn = document.getElementById(\u0026#34;langToggleBtn\u0026#34;); const label = document.getElementById(\u0026#34;langLabel\u0026#34;); if (!btn || !label) return; const langMap = { s: \u0026#34;cn\u0026#34;, t: \u0026#34;hk\u0026#34; }; // 延迟执行，确保所有 DOM 元素加载完毕 setTimeout(() =\u0026gt; { const contentEl = document.querySelector(\u0026#34;#main-content\u0026#34;); if (!contentEl) return; // 语言初始检测逻辑 const detectInitialLang = (text) =\u0026gt; { const simplifiedChars = [\u0026#39;个\u0026#39;, \u0026#39;简\u0026#39;, \u0026#39;么\u0026#39;, \u0026#39;国\u0026#39;, \u0026#39;这\u0026#39;, \u0026#39;没\u0026#39;, \u0026#39;图\u0026#39;]; const traditionalChars = [\u0026#39;個\u0026#39;, \u0026#39;簡\u0026#39;, \u0026#39;麼\u0026#39;, \u0026#39;國\u0026#39;, \u0026#39;這\u0026#39;, \u0026#39;沒\u0026#39;, \u0026#39;圖\u0026#39;]; let sCount = 0, tCount = 0; for (const ch of simplifiedChars) if (text.includes(ch)) sCount++; for (const ch of traditionalChars) if (text.includes(ch)) tCount++; return tCount \u0026gt; sCount ? \u0026#34;t\u0026#34; : \u0026#34;s\u0026#34;; }; const originalLang = detectInitialLang(contentEl.innerText); let currentLang = originalLang; // 用 TreeWalker 收集所有可转换的文本节点 const textNodes = []; const walker = document.createTreeWalker(contentEl, NodeFilter.SHOW_TEXT, { acceptNode: function (node) { const parent = node.parentElement; if (!parent) return NodeFilter.FILTER_REJECT; // 排除按钮及按钮内部的文字 if (parent.closest(\u0026#34;#langToggleBtn\u0026#34;)) return NodeFilter.FILTER_REJECT; return NodeFilter.FILTER_ACCEPT; } }); while (walker.nextNode()) { textNodes.push({ node: walker.currentNode, originalText: walker.currentNode.textContent, convertedText: null, // 缓存 }); } // 更新按钮 UI 文案 function updateButtonUI(lang) { if (lang === \u0026#34;s\u0026#34;) { label.textContent = \u0026#34;简体中文\u0026#34;; btn.title = \u0026#34;目前为简体中文，点击切换为繁体\u0026#34;; } else { label.textContent = \u0026#34;繁體中文\u0026#34;; btn.title = \u0026#34;目前為繁體中文，點擊切換為簡體\u0026#34;; } } updateButtonUI(currentLang); // 点击切换逻辑 btn.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; { const targetLang = currentLang === \u0026#34;s\u0026#34; ? \u0026#34;t\u0026#34; : \u0026#34;s\u0026#34;; const converter = OpenCC.Converter({ from: langMap[currentLang], to: langMap[targetLang], }); textNodes.forEach((item) =\u0026gt; { if (targetLang === originalLang) { item.node.textContent = item.originalText; } else { if (item.convertedText === null) { item.convertedText = converter(item.originalText); } item.node.textContent = item.convertedText; } }); currentLang = targetLang; updateButtonUI(currentLang); }); }, 100); // 可根据需要调整延迟 }); ","date":"2025-05-01","externalUrl":null,"permalink":"/posts/blowfish-customization-note/","section":"文章列表📄","summary":"","title":"Blog｜自定義Hugo Blowfish主題","type":"posts"},{"content":"","date":"2025-05-01","externalUrl":null,"permalink":"/tags/hugo/","section":"文章標籤🏷️","summary":"","title":"Hugo","type":"tags"},{"content":"\n","date":"2025-05-01","externalUrl":null,"permalink":"/tags/","section":"文章標籤🏷️","summary":"\u003cp\u003e\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e\n\u003c!-- 暫時沒有設置[高級標籤](https://imasugu.cc/tags/advanced/)頁面，但是你可以試試點開～ --\u003e","title":"文章標籤🏷️","type":"tags"},{"content":"\n","date":"2025-05-01","externalUrl":null,"permalink":"/categories/","section":"文章分類📁","summary":"\u003cp\u003e\u003cbr\u003e\u003cbr\u003e\u003c/p\u003e","title":"文章分類📁","type":"categories"},{"content":"","date":"2025-05-01","externalUrl":null,"permalink":"/posts/","section":"文章列表📄","summary":"","title":"文章列表📄","type":"posts"},{"content":"","date":"2025-05-01","externalUrl":null,"permalink":"/categories/%E6%8A%98%E9%A8%B0%E5%B0%8F%E8%A8%98/","section":"文章分類📁","summary":"","title":"折騰小記","type":"categories"},{"content":"雖然搭建博客的小文根本沒寫完，但我還是決定先水一篇主題粉刷記錄：\nblowfish主題的配色方案自定義。\n· 本人代碼基礎約等於零，全靠ChatGPT和直覺。\n· 文中附送兩種配色方案。\n· 再附送twikoo評論區顏色修改方式———\n必要的一種折騰？ # 應該會有博客同樣使用blowfish主題的朋友和我有類似的想法。\nblowfish主題本身是個功能豐富也支持大量自定義的 hugo 主題，但 官方提供的快速上手配色方案 實在是不太好看，儘管默認配色也算簡潔清爽，但離我喜歡的綠色\u0026amp;紫色調還是差太遠。\n還是自己動手吧。\n弄不懂也沒關係 # 官網的說明其實寫明，將博客文件夾中config/_default/params.toml的colorScheme指定為對應的css文件名稱即可。如果主題是MyScheme.css，那麼這裡就應該寫colorScheme = \u0026quot;MyScheme\u0026quot;。 那麼我們來看看默認的 blowfish 主題配色方案文件打開是個什麼樣子呢： 點我展開 /* Blowfish scheme */ :root { --color-neutral: 255, 255, 255; /* Gray */ --color-neutral-50: 248, 250, 252; --color-neutral-100: 241, 245, 249; --color-neutral-200: 226, 232, 240; --color-neutral-300: 203, 213, 225; --color-neutral-400: 148, 163, 184; --color-neutral-500: 100, 116, 139; --color-neutral-600: 71, 85, 105; --color-neutral-700: 51, 65, 85; --color-neutral-800: 30, 41, 59; --color-neutral-900: 15, 23, 42; /* Blue */ --color-primary-50: 239, 246, 255; --color-primary-100: 219, 234, 254; --color-primary-200: 191, 219, 254; --color-primary-300: 147, 197, 253; --color-primary-400: 96, 165, 250; --color-primary-500: 59, 130, 246; --color-primary-600: 37, 99, 235; --color-primary-700: 29, 78, 216; --color-primary-800: 30, 64, 175; --color-primary-900: 30, 58, 138; /* Cyan */ --color-secondary-50: 236, 254, 255; --color-secondary-100: 207, 250, 254; --color-secondary-200: 165, 243, 252; --color-secondary-300: 103, 232, 249; --color-secondary-400: 34, 211, 238; --color-secondary-500: 6, 182, 212; --color-secondary-600: 8, 145, 178; --color-secondary-700: 14, 116, 144; --color-secondary-800: 21, 94, 117; --color-secondary-900: 22, 78, 99; } \u0026hellip;我不知道第一次看到這個文件的朋友是什麼感覺，反正我挺暈乎的。\n主題作者在配色方案 一節進行了說明：blowfish是基於3個基準色進行配色，也就是上方的--color-neutral-500、--color-primary-500、--color-secondary-500。\n後接 50/100/200/300\u0026hellip; 這些不同數字則是代表了3個基準色的不同色調偏移，對應的值則是 rgb 值。\n在實際操作過程中我個人感覺 tailwind CSS 的代碼是通過預先分類、預定義的反覆使用來構建樣式的，一不小心就很容易弄混。但一旦設定完成，這些預先設定好的顏色就可以運用於整個頁面的各個角落。\n比如下圖，就可以看到：\n不同的變量指向了不同的位置 使用fugu來生成配色方案 # 大概了解了上面這些代碼的作用之後，就可以打開作者為該主題顏色配置所寫的工具fugu了： nunocoracao/fugu TBD JavaScript 20 4 （可以的話我是真的不想再用他了，好累）\n按照頁面說明git clone到本地，在終端機中進入 fugu 目錄，安裝依賴（npm install）。文件夾中可以看到有個文件叫 index.js，這就是稍後要執行的內容。\n暫停插入注意事項 # 如果讀者朋友也像我一樣將博客部署在 github pages 上，那麼在 clone fugu 的時候最好不要將它放到博客文件夾，否則在 git push 的時候會報錯。fugu 是一個獨立的 Git 倉庫（它自帶 .git 文件夾），博客本身也是一個 Git 倉庫，這樣就會出現兩個結果：\n· 博客倉庫內包含了另一個 Git 倉庫（fugu） · Git 被視為子模塊（submodule），影響 git push 我當時報錯真的很崩潰，總之盡量不要放博客文件夾，另外放其他地方就好，反正我們只需要他生成的那個 css 文件\u0026hellip;\n繼續操作 # 接著輸入node index.js generate 你喜歡的三個hex值執行fugu就好了。\n貼一個轉換網站：十六進制轉RGB 可以在這個網頁上輸入自己想要的顏色並進行轉換。\n比如按照作者的示例輸入 index.js generate 161032 FAFF81 FFC53A之後，下面嘩嘩嘩嘩就會跑一串剛才那樣的代碼出來，同時在 fugu 的文件夾下面也會生成一個 output.css 如下：\n點我展開 :root { --color-neutral: 255, 255, 255; --color-neutral-50: 214,208,240; --color-neutral-100: 163,150,222; --color-neutral-200: 112,93,203; --color-neutral-300: 73,53,166; --color-neutral-400: 47,35,108; --color-neutral-500: 22,16,50; --color-neutral-600: 8,6,19; --color-neutral-700: 0,0,0; --color-neutral-800: 0,0,0; --color-neutral-900: 0,0,0; --color-primary-50: 255,255,255; --color-primary-100: 255,255,255; --color-primary-200: 255,255,255; --color-primary-300: 255,255,255; --color-primary-400: 253,255,206; --color-primary-500: 250,255,129; --color-primary-600: 248,255,88; --color-primary-700: 247,255,47; --color-primary-800: 245,255,7; --color-primary-900: 212,221,0; --color-secondary-50: 255,255,255; --color-secondary-100: 255,255,255; --color-secondary-200: 255,255,255; --color-secondary-300: 255,242,211; --color-secondary-400: 255,220,135; --color-secondary-500: 255,197,58; --color-secondary-600: 255,185,17; --color-secondary-700: 231,163,0; --color-secondary-800: 191,134,0; --color-secondary-900: 150,106,0; } 沒錯，這就是可以拿來用的配色方案了！\n給他取個名字叫theme，把這個複製到你博客文件夾下的assets/css/schemes文件夾中，接著在你的config/_default/params.toml中改成colorScheme = \u0026quot;theme\u0026quot;你的主題就用上這個配色了。\n配色靈感哪裡找 # 如果要一個個配色來選實在是太痛苦了，這時候就需要運用一些在線配色找點靈感。這裡貼一下我個人比較喜歡的幾個配色工具網站：\nColor Hunt Adobe Color Coolors 可以按照自己的喜好自由配色，設計自己的方案。當然，fugu跑出來的顏色方案總會有一些不盡如人意的地方（比如顏色對比太過強烈，深色背景時看不清代碼塊背景色等，這時候就需要打開F12看看對應的區域顏色代碼是什麼，再單獨進行顏色調整。調整好之後放進配色方案 css 文件中即可。\n附送兩個配色方案！ # 因為本人很喜歡綠色\u0026amp;紫色，所以調整出來深綠和紫色配色方案（紫色也是我目前在用的配色方案）各一個，有喜歡的朋友可以自取 :D\n鼠標移動到色塊上會顯示色號喔，請自行複製^^（感謝 ChatGPT 老師誨人不倦\u0026hellip;）\n我的配色方案已調整過了，和 fugu 跑出來的版本還是有一些不同\n如果想即刻使用，複製下方的代碼並存儲為喜歡的名字放在css文件夾就好）\nDarkgreen # #789461 #50623A #294B29 代碼見下： 點我展開 :root { --color-neutral: 255, 255, 255; --color-neutral-50: 245,245,245; --color-neutral-100: 255,255,255; --color-neutral-200: 237,241,234; --color-neutral-300: 198,211,187; --color-neutral-400: 159,180,141; --color-neutral-500: 120,148,97; --color-neutral-600: 100,123,81; --color-neutral-700: 80,99,65; --color-neutral-800: 60,74,49; --color-neutral-900: 40,49,32; --color-primary-50: 255,255,255; --color-primary-100: 232,237,225; --color-primary-200: 194,209,177; --color-primary-300: 157,180,129; --color-primary-400: 119,146,86; --color-primary-500: 80,98,58; --color-primary-600: 141,156,123; --color-primary-700: 38,47,28; --color-primary-800: 17,21,12; --color-primary-900: 0,0,0; --color-secondary-50: 248,251,248; --color-secondary-100: 198,224,198; --color-secondary-200: 149,197,149; --color-secondary-300: 99,170,99; --color-secondary-400: 68,124,68; --color-secondary-500: 41,75,41; --color-secondary-600: 27,49,27; --color-secondary-700: 12,22,12; --color-secondary-800: 0,0,0; --color-secondary-900: 0,0,0; } Purple # #907ED6 #DE57D5 #4EA1F4 代碼見下： 點我展開 :root { --color-neutral: 255, 255, 255; --color-neutral-50: 241, 242, 252; --color-neutral-100: 230, 230, 249; --color-neutral-200: 211, 210, 243; --color-neutral-300: 185, 182, 235; --color-neutral-400: 161, 152, 225; --color-neutral-500: 144, 126, 214; --color-neutral-600: 128, 100, 199; --color-neutral-700: 85, 66, 133; --color-neutral-800: 75, 62, 113; --color-neutral-900: 45, 36, 66; --color-primary-50: 254, 245, 254; --color-primary-100: 253, 234, 253; --color-primary-200: 249, 213, 249; --color-primary-300: 241, 162, 237; --color-primary-400: 236, 134, 230; --color-primary-500: 222, 87, 213; --color-primary-600: 193, 56, 181; --color-primary-700: 160, 43, 148; --color-primary-800: 131, 37, 119; --color-primary-900: 108, 35, 97; --color-secondary-50: 239, 248, 255; --color-secondary-100: 220, 238, 253; --color-secondary-200: 192, 226, 253; --color-secondary-300: 149, 209, 251; --color-secondary-400: 98, 183, 248; --color-secondary-500: 78, 161, 244; --color-secondary-600: 40, 123, 232; --color-secondary-700: 32, 101, 213; --color-secondary-800: 32, 82, 173; --color-secondary-900: 32, 72, 136; } 統一Twikoo評論區配色 # 既然改了主題配色，Twikoo評論區不改一下怎麼能行！\n於是根據我的個人經驗和ChatGPT老師的幫助，把Twikoo評論區的字符和icon顏色都修改了（但沒有改評論按鈕，因為不一定每個人都喜歡改按鈕顏色）\n如需使用，把這部分添加到custom.css後方即可～示例效果見下方我的評論區。\n啊，寫得好亂啊，我不管了！ 點我展開 /* 修改 Twikoo 相关颜色 */ /* 浅色模式 */ html:not(.dark) { --icon-color: rgb(var(--color-neutral-500)); --comment-text-color: rgb(var(--color-neutral-800)); /* 用户名、时间 */ --comment-content-color: rgb(var(--color-neutral-700)); /* 评论正文 */ --reply-text-color: rgb(var(--color-neutral-500)); /* 回复的评论内容 */ --input-bg-color: rgb(var(--color-neutral-50)); /* 输入框背景色 */ --input-border-color: rgb(var(--color-neutral-300)); /* 输入框边框 */ --input-text-color: rgb(var(--color-neutral-700)); /* 输入框文字 */ --input-placeholder-color: rgb(var(--color-neutral-400)); /* 输入框占位符 */ } /* 深色模式 */ html.dark { --icon-color: rgb(var(--color-neutral-200)); --comment-text-color: rgb(var(--color-neutral-200)); /* 用户名、时间 */ --comment-content-color: rgb(var(--color-neutral-500)); /* 评论正文 */ --reply-text-color: rgb(var(--color-neutral-500)); /* 回复的评论内容 */ --input-bg-color: rgb(var(--color-neutral-800)); /* 输入框背景色 */ --input-border-color: rgb(var(--color-neutral-600)); /* 输入框边框 */ --input-text-color: rgb(var(--color-neutral-50)); /* 输入框文字 */ --input-placeholder-color: rgb(var(--color-neutral-400)); /* 输入框占位符 */ } /* 让 Twikoo 的图标及footer颜色随主题变换 */ .tk-icon.__comments, .tk-action-icon, .tk-action-link, .twikoo .tk-footer, .twikoo .tk-footer a, .twikoo .tk-footer svg { color: var(--icon-color)!important; fill: var(--icon-color); } /* 让 Twikoo 的 SVG 继承颜色 */ .twikoo svg { fill: currentColor !important; } /* 设置评论区的文字颜色（用户名、时间） */ .twikoo .tk-meta { color: var(--comment-text-color); } /* 设置评论正文的颜色 */ .twikoo .tk-content, .twikoo .tk-content-expand span, .twikoo .tk-content-expand p { color: var(--comment-content-color); } /* 让输入框颜色随主题变化 */ .twikoo .el-input__inner, .twikoo .el-textarea__inner { background-color: var(--input-bg-color) !important; border: 1px solid var(--input-border-color) !important; color: var(--input-text-color) !important; } /* 修改输入框的占位符颜色 */ .twikoo .el-input__inner::placeholder, .twikoo .el-textarea__inner::placeholder { color: var(--input-placeholder-color) !important; opacity: 0.6; } 差不多就是這樣，如果有大佬發現代碼有錯或者可以優化請不吝指教\u0026gt;\u0026lt;\n","date":"2025-03-19","externalUrl":null,"permalink":"/posts/blowfish-colorscheme/","section":"文章列表📄","summary":"賽博空間的牆面要刷自己喜歡的油漆。","title":"Blog｜更改Hugo Blowfish主題配色","type":"posts"},{"content":"右膝蓋後窩不適已2月有餘，長期處於下蹲沒問題但起身時卡頓的狀態，站直也會感覺膝蓋後窩隱隱作痛。想著可能是此時天氣濕冷受了風寒，多做拉伸就好，就這麼疼到了2月初也沒太當回事，只是心裡暗想這也太久了吧。 放任不管的後果是1月下旬某日站在原地沒有任何動作，在沒有崴腳or扭腳的情況下，右腳踝內側傳來電擊一般的疼痛。當時走路直接變成一瘸一拐右腳無法受力（軟腳），右腳踝也無法向外旋轉或者整體往內八方向轉，一動腳踝就像要裂開一樣。 最後還是忍不住請假去看醫生了。\n先看足踝外科 # 著急忙慌想著問題不大就請了半天假去工作點附近的三甲看，按照痛處分類掛了足踝外科，給醫生說我有擦扶他林但感覺沒有明顯改善。\n醫生觸診後：你沒有痛風病史吧？我說沒有，尿酸指標一直很健康，醫生你看我腳不也不腫嗎？\n醫生指著我痛點：欸很奇怪，那你痛是為什麼呢？\n\u0026hellip;我怎麼知道！\n開了單側踝關節的CT單，半小時後結果出來拿給醫生，醫生看着報告更加疑惑了：「右踝關節諸骨骨質未見確切異常」真的沒問題呀。這樣要不給你開點止痛藥，疼了再吃。\n處方：醋氯芬酸腸溶片（維樸芬） 一盒。\n等了一個下午就這麼被打發走了。\n本次開銷：10元掛號費+120元踝關節X光+24.02口服藥物 = 154.02元\n人生第一次針灸 # 男票擔憂我狀況，帶我去之前他曾經治療的地方扎針。醫師看過我狀況後說問題不大，直接下手扎了。\n（這點不要學我，除非讀者也和我一樣對介紹人足夠信任，說要直接扎的時候我還是很驚慌的）\n扎針時醫師問我平時鍛鍊否？我只說實在沒時間鍛鍊T T據看護的男票說醫師自腰部起針，臀部、小腿到腳腕插滿大概17根針，我的天哪。\n烤燈的時候是最舒服的，暖洋洋的很想睡。臀部因為「肌肉較多」醫師下手據說非常深，而整個酸酸脹脹的針感殘留到第二天晚間才逐漸消退，說如果需要掛個號再來即可，但我工作太忙加上月經剛好到訪實在不想扎針就沒有再去。\n沒想到人生第一次針灸是如此刺激的體驗\u0026hellip;啊對當時還送了幾個火罐，上罐的時候只覺得皮肉都被吸進罐中，疼得我齜牙咧嘴，醫師笑說沒事忍忍就過了，我真的覺得好痛！\n不過觀察一週後膝蓋後窩狀況改善不大。也可能是因為沒有扎夠（啊？）\n本次開銷：單次針灸60元\n還是去運動醫學科吧 # 思索一番既然CT沒有異常那大概是筋絡肌腱的問題，遂掛了省骨科醫院的運動醫學科。該院在本地甚至全國的口碑似乎都不錯，前身是成都體育醫院，所以看運動損傷應該是很有經驗。\n醫生一邊敲鍵盤一邊聽我蹲下起立比劃說明症狀。思考幾秒後轉向我：老師你這個是膕肌問題啊，你先躺下我給你看一下。 觸診按壓做了平躺和趴臥兩個姿勢。醫生先看了足弓說老師你這個足弓也不太好喔，接著按壓確認痛處後說老師你膕肌相當緊張，腳踝的位置應該是脛後肌緊繃，但都是你的膕肌引起。按理說這種情況只會出現在登山人和跑者身上喔，你這個肌腱壓力太大了！喔你之前也針灸過？我們一般不扎腰————老實說吧我今天就是要給你扎針。口服藥我就不開了，先下去繳費再上來直接做喔。寶貝兒（呼叫旁邊同為男性的實習醫生），你等會兒教老師那個拉伸動作喔。\n我：（OS：啊？寶貝兒？）啊還是要扎針啊\u0026hellip;\n醫生（笑眯眯地）：是喔～\n你永遠逃不過中成藥 # 診斷：肌筋膜炎(右側膕肌、脛后肌)、筋骨病(气滞血瘀徵)（不是，怎麼都氣滯血瘀啊？）\n處方：電針✖️4+紅外線治療 1次、鄭氏舒活酊✖️2 丁桂活絡膏✖️2\n這次用的是電針，能感覺到醫師和上次針灸相比下針明顯要輕很多，通電之後肌肉一跳一跳的酸脹感實在是很奇妙，腓腸肌和靠近腳踝的肌肉位置脹痛感則更明顯。\n施針醫師一邊扎一邊：你平時鍛鍊嗎？不打排球嗎？\n聽到我否定回答之後醫師笑：你肌肉挺好的。我以為你運動呢。\n我：謝謝，當您表揚了！我還以為我滿腿都是肥肉呢\u0026hellip;\n鄭氏舒活酊和丁桂活絡膏都是省骨科醫院的特色製藥，其實我聞來聞去總覺得膏藥嘛大差不差無非就是紅花薄荷冰片樟腦之類，但貼上去之後一天還真的舒服些了，神奇。下蹲之後再起來沒那麼痛了！\n大部分時間我是不信任中成藥的，但膏藥這些似乎已經成了玄學（。\n鄭氏舒活酊没拍，我搜了個網圖 丁桂活絡膏，一袋10片 本次開銷：14元掛號費+182元電針治療+65.02元外用藥物 = 261.02元\n按摩也是必要的 # 扎完針教了按摩鬆解和拉伸姿勢。其實按摩姿勢和很多網路平臺上提到的很類似，我大概畫了個圖示意。\n比如我是右腿肌肉緊張，那就右腿蹺到左腿上，左腿和地面90度。右腿翹腳尖感到肌肉拉伸，從上方沿著脛骨向腳踝方向用大拇指按摩這一條肌肉，逐步下滑。\n畫伯預警。希望能看懂wwww 至於拉伸姿勢對我來說沒有太多難度，和運動後拉伸很近似，我也還是畫了個圖示意。\n雙手手掌貼牆、手臂伸直，健康的腿往前屈膝，患腿往後伸直，腳底踩地，感覺到患腿後側拉伸感，保持30s-1分鐘靜止狀態即可（不用來回搖晃）。\n醫生說放鬆膕肌這個姿勢是不錯的，自己空了也可以按一按足三里穴位。我：沒問題！\n個人認為按摩鬆解和拉伸是日常都可以嘗試的放鬆肌肉的方式，希望也能對下肢不適的朋友有幫助XD\n也許還有別的一些注意事項 # 醫生說如果我按摩貼藥後有所緩解就不用再扎針，但如果還是從上往下這樣疼痛就需要再掛號來看是否是腰部的問題。所以千萬不要久坐久站，一定要多活動，練習核心力量保護腰部；\n每次運動前和運動後一定要注意拉伸；\n平時站立的時候注意不要膝蓋伸太直，長久之後會肌肉緊張鈍痛；\n現在的問題也許是：針對足弓的問題，醫生一看我穿AF1就讓換「對足弓有支撐的鞋子，別穿平底鞋」\n所以到底該買啥鞋子比較好啊\u0026hellip;\n","date":"2025-02-23","externalUrl":null,"permalink":"/posts/go-to-a-sports-medicine-doctor/","section":"文章列表📄","summary":"我逐漸脆弱的身體——","title":"東跑西顛｜春日的疼痛感格外漫長","type":"posts"},{"content":"","date":"2025-02-23","externalUrl":null,"permalink":"/tags/%E7%94%9F%E6%B4%BB/","section":"文章標籤🏷️","summary":"","title":"生活","type":"tags"},{"content":"在2024年的尾巴送上我租房4年折騰不斷之後的一些廢話心得。\n閱前預警:本篇內容更適合像我一樣喜歡整租套一+1年及以上起步長租+非常非常非常喜歡折騰的朋友。\n在開始搜索房源之前 # 在打開手機app搜索房源之前，弄清楚你需要的房子是怎樣的？需求分析這一環節必不可少，散漫地去搜索最後只會讓人感到虛無與痛苦。\n我的一點經驗：試試先列一個清單，自問自答一番寫下你對房子的地理位置、幾居室、是否樓頂、是否開間等具體要求，這樣會對自己想租的房子有一個基礎概念。\n這裡按照我篩選房源時會考慮的幾點要素列舉如下，供讀者朋友們參考。\n地理位置：距離通勤地點的距離？房源週邊1km甚至500m範圍內是否有公共交通（地鐵或公車都很重要），如果有的話轉乘次數是否不超過2次?（我就是非常討厭轉乘的人，不管地鐵還是公車都希望坐下就直接到公司樓下，我懶我承認）\n居室:1-2居室最佳，如果是要做飯就不考慮床和客廳連通的「開間」，廚房務必和臥室/客廳分開。\n房屋面積：1人獨居40~70平都可以考慮。（40其實都會偏小，因為套內會比標註產權面積更小一些，擺滿東西之後難免逼仄）70又有一些大，但東西多的時候會有更多儲物空間，如果是套二的戶型甚至可以單獨做一個電競房，住起來會更舒適。\n房齡：馬上進入2025年，以我個人體驗來說，不推薦考慮2000年以前的老破小，設施設備會更破舊，房屋狀況也不太好。出於性價比的考慮，更推薦房齡在10-15年左右的房子，不算太舊，如果是當年的精裝商品房，本身設計也不會太醜。\n電梯/樓梯房：是電梯房還是樓梯房？如果搬家東西多、膝蓋狀況不好，那我是首推電梯房的。\n樓層：頂樓不一定差，但底樓一定不會選。可能的話盡量不挑選20層往上的高層，夏天的太陽曬著會很痛苦，而底樓的採光和濕度會是大問題。（當然如果出於節約租金的考慮也可以選擇底樓，一般都會比同單元便宜不少）\n水電收費，燃氣狀況：其實這是我篩房時會第一考慮的，因為住過燒鍋爐水的公寓也住過一般民水民電的房子，我租房首先會看的就是水電是否是民水民電，是否通氣。不過一般不通燃氣的房子配套就是商水商電+開間，算是公寓/酒店式住宅的標配，讀者朋友可以按照自己需求來選擇。\n物業費用：好房子自然會配備好的物業，可以在心裡預估一下自己可以接受的物業費是多少錢/月，大概計算一下成本。\n是否是租售房：一定注意房源本身是否在售。如果在售的話，租住期間可能會不斷有人來看房，擾亂你的正常生活。我會直接排除掛租售的房子，只考慮僅出租的房源。\n開始搜索！ # 在心裡大概劃定了「不能接受的點」之後，你就可以打開安居客/58/貝殼租房/小紅書/豆瓣/微博之類的app了。\n如果你更傾向中介 # 首先說我的個人意見：專業的事交給專業的人來做，我並不介意給貝殼0.8-1個月的房租作為中介服務費。平台瘋狂在城市鋪設點位的結果就是好的中介確實盡心盡力，推薦房源更多，適合願意多花一點錢但想相對節約時間的懶人（比如我），更何況在確定租房之前都不會收費，這點比較讓人安心。\n目前貝殼展示的房源是鏈家、德佑、21世紀不動產、富房等中介公司共享，在本人居住的城市來說，單月價格都會比房東直租要高個200-400左右。\n以及我並不推薦貝殼省心租的原因是：每個月標價便宜的費用粗略一算，一年下來的費用並不見得比要交給省心租的年度服務費用少，對長租客是非常不友好的。\n如果你所在的城市更多是小中介或者其他線下中介，謹記一點：不要相信任何需要「帶看費」的中介！不要相信任何需要「帶看費」的中介！不要相信任何需要「帶看費」的中介！\n重要的話要說三遍，所有需要所謂「帶看費」的都有可能是騙子/流氓。\n還有一種就是到了現場發現圖文不符、讓人交200-500的帶看費的情況。這時候也扭頭就走絕對不要停留。\n如果你想自己找房 # 本人是並不抗拒微博/豆瓣/小紅書搜房的，我也曾經有過前腳在貝殼上看房，後腳就在小紅書遇到房東本人的奇特經歷，但綜合下來小紅書搜房東房客的體驗都不是太好，房東總數明顯\u0026lt;房客總數，效率低騙子還多。\n小紅書更加適合想要快速找轉租/找合租室友的朋友。有好幾次我被推送到很喜歡轉租房源，去問發現都已經租出了。\n如果要在小紅書上找房，也請注意不願意在帖中暴露房源信息的八成都是照騙中介，評論很快回覆但要求你私信他的也都是中介。\n如果你喜歡的區域有更多房源掌握在老舊小區保安手中，也可以去聯繫他們，給保安大叔散兩根煙就好，確定租房之後他自然會找你要紅包的（。\n別忘了你的預算 # 將預算放在這裡再說是因為在綜合考慮以上要素之後，可選的房源就已減少很多，讀者朋友也可以在App內看到所在區域的平均價格範圍，心裡有個數，不論是和房東、轉租客還是和中介談都會比較有底氣。\n8-10月算是租房旺季，價格會飄高一些；10月之後到過年前開始進入淡季，房源相對減少（好的房子已被篩走）但相對的也會有一些房有好價。\n在實地看房之前，試試VR看房 # 我個人會更推薦貝殼租房的VR看房功能,VR看起來確實效果更好(沒有在打廣告)。安居客很多時候會掛一些和貝殼一樣的房源但價格偏高，僅照片也看不太出來房源狀況。VR看房還有個好處就是，即使你不打算在貝殼租房，也可以藉這個功能了解該小區的租金狀況與戶型分佈，再去其他平台搜索該小區的租房信息也很方便。\n在VR看房時要注意以下幾點：\n-房間配備：是否有冰箱、微波爐、洗衣機？能耗等級如何？房間內是否有空調？空調數量？能耗等級如何？（不論客廳還是臥室，看著嶄新的3級能耗空調快跑啊，到時候電費嚇死人otz）\n-戶型及朝向：客廳、臥室佈局是否滿足個人需求（比如我就無法接受開間，客廳/臥室/廚房必須有明確分隔和門）VR中是否能看到採光效果？\n-房屋狀況、基礎衛生：房屋裝修是否過新，有無甲醛房/串串房的可能？牆面是否有破皮，靠近衛生間、廚房的區域是否有反潮反鹼？地板是否有老化破損？\n-衛生間：廁所是蹲廁還是馬桶？有無乾濕分離？\n-廚房：廚房的佈局與大小是否足夠活動（4平米以下的廚房我這個體格會覺得太擁擠轉不開身，優先選擇5平米以上、台面空間大的廚房）\n這幾個點都是在App內VR看房時能看出來的，無需實地看房都可以對房源進行再次篩選。\n去看房吧！ # 恭喜你，在線上篩選無數之後走到了去線下看房這一步！線下看房切勿走馬觀花，仔細檢查房子狀況非常重要。\n進入小區 # 有條件的話，建議白天晚上都去看房：白天採光更好，能看清房屋狀況，如果只是在晚上看，可能會有很多地方無法看清。晚上能更加直觀感受房間隔音是否良好。 小區外狀況：房源所在地是否是開放式小區？開放式小區會更有「煙火氣」，但也可能有安全隱患（人員成分複雜等）在看房的時候要注意。週邊是否有商業配套，是否方便日常購物和外賣進出，小區是否配有足夠的外賣、快遞櫃？小區出入門禁是否嚴格，老舊小區是否有夜間開門費用？ 小區內狀況：公共區域衛生情況是否符合要求，觀察垃圾桶、車棚、停車場位置，也可以順路問清楚停車月費。 單元內：著重關注電梯運行狀況，單元是否有門禁？樓道內是否明亮有監控設施，監控設施是否運行良好。 房間內部 # 再次檢查房間佈局，整個房間走一圈感受氛圍（對，就是氛圍），是不是自己喜歡的感覺。 家具家電配置：再次檢查能耗狀況，家具家電是否可以正常使用（別忘了看能耗等級）。 衛生間：牆面磁磚狀況（老房的話磁磚多有空鼓開裂）、排水狀況、衛生情況做好確認。 廚房：管道排布如何，櫥櫃檯面高度是否符合本人身高？（我就沒找到過符合我身高的檯面，每次切菜洗碗都彎腰真的好累） 房屋狀況：再次檢查是否有反潮反鹼，牆面是否有脫皮，陽台是否有漏水的狀況。有疑問及時提出。 臥室：大小是否合適，衣櫃大小是否夠使用？ 房門鎖的狀況：是否是電子鎖？如果是老式門鎖，可能需要更換鎖芯。 這些都是非常基礎但必須要在實地看房中注意到的點喔。\n要簽約了，我需要注意些什麼？ # 我幾次租房簽約都是鏈家作為第三方參與，這一部分我其實給不了太多建議。但有兩點是有必要注意的：\n合同中可能出現的「租賃稅費」，到底應該誰來交？\n房屋租賃稅費就是小紅書上經常看到的租客整治「惡毒房東」常用的「開發票」對應的稅。\n法律規定「凡提供房屋出租行为的个人为房屋租赁业税收的纳税义务人」，即房東應該繳納該筆稅費。但在實際操作過程中，租客一般不會去開發票，房東更不會去繳納該筆稅費。\n根據本人的經驗來說，中介也都會表示「房屋租賃稅費根據當地情況都是讓租客來給的喔」並把這一條寫在合同中，這實際都是不合理的。（只是我實在懶得和房東\u0026amp;中介多糾纏，所以一般都順著讓他們寫成「租客承擔」了）\n所以本人建議是：只要可能，合同內盡量避免出現關於租賃稅費的描述，因為該稅費默認就是房東承擔的。如果是制式合同（不論链家或房東直簽），都盡量往「房東與租客各承擔一半」的方向去協商，盡量保障自己的權益，避免之後出現「想開發票卻吃了啞巴虧」的情況。\n租賃期限與提前解約條件要明確\n作為租客在合同中務必需要明確的就是租期、解約條件及賠償。鏈家的合同這一部分就寫得相當粗糙：「租赁期内，甲方需提前收回出租房屋的，或乙方需提前退租的，应提前通知对方，并按月租金金额100%的标准向对方支付违约金，甲方应退还未使用的租金、押金。」一般情況下不論房東還是租客，要退租都應至少提前1個月向對方說明。這一點建議都明確在合同上，避免之後出現爭端。\n約定好搬入時間，就可以準備簽約了。簽約時間可以和房東協商。\n舉個例子：上一次租房到期需在1月10日前退房，而新房在12月30日就可簽約，可以和新房房東協商為期一週左右的免租期，即合同上的租房起始日為1月5日，盡量減少自己的損失，多一些搬家和計劃的時間。\n簽約完成！ # 恭喜恭喜，離喬遷新居又近一步！交房的時候請再次對看房板塊涉及的部分重點檢查，和房東再次確認鑰匙、門禁、電卡等物品的交付（房門鑰匙務必保證都在自己手裡，房東不可以無事來訪），就可以做搬入新房的準備了。\n拉拉雜雜寫了很多，希望能幫到對租房有疑惑的朋友。也祝福讀到這篇博文的租客朋友們在新的一年都可以入住喜歡的房子^^\n（下一篇也許會寫一些自己的搬家牢騷，就看憋不憋得出來了TvT）\n","date":"2024-12-31","externalUrl":null,"permalink":"/posts/rent-a-room/","section":"文章列表📄","summary":"如果你租房超過2年，那你一定懂我在說什麼。","title":"折騰小記｜獨居租房：做不完的功課","type":"posts"},{"content":" ——哎。我覺得最適合本次體驗的一個標題。 6月底看到王菀之的微信視頻號發了預告會來成都，馬上去問友要不要去看。 友的反應倒是非常雀躍，我很滿意（ 然後就是漫長的工驢日常。7月12日刷大麥突然就看到王菀之的演出開了預售，是以前從未去過的東區音樂現場。對 livehouse 之類場所的分區態度基本就是隨緣，想著肯定都是站票怎麼分都無所謂，但沒想到最後真的有分座位，還分到了25排+\u0026hellip; 我哀嚎三分鐘。\n有樂隊剪影的大屏感覺是有點不一樣 此曲只應天上有 # 不知道是不是我聽錯，唱「永遠幾遠」時佢說「給大家唱一首上一次唱是二十年前的歌」。我掐指一算這首不是還沒到二十年嗎\u0026hellip;不過無所謂，不影響我聽到「有沒有試過心酸 酸得發覺良辰都苦短」的時候默默鼻酸。和現在網易雲上也只有live版的「永遠幾遠」音源相比，現場聽起來感覺又有些不同，細膩但總覺得佢唱得快要碎掉\u0026hellip; 「迷失藝術」非常之好，Ivana發揮穩定，這也是難得的背景畫面有歌詞的一首..但無奈我位置太遠怎麼拍屏幕也沒有小紅書上其他博主拍出來那麼美；\n以及難以想像會聽到「手望」，雖說我和友都想聽這首，但在都沒有去找歌單提前溫習的情況下聽到這首算是意外之喜（這首出來的時候已經很晚我們都覺得今晚大概不會唱了）前奏一出我和友抓著手大叫嗚嗚嗚嗚。同時我腦補軒公聲音合唱不過份吧不過份吧\u0026hellip; 唱了飯戲攻心2的主題曲「我們曾經白頭到老」。雖然只看了第一部，因為不想看一地雞毛沒有去看第二部，但歌卻反覆聽過好多遍，哎現場怎麼這麼好聽，天籟一般\u0026hellip;只是我以為會唱1的主題曲「狠愛狠愛你」這不比其他幾首好蹦嗎！ 「末日」更是完全沒想到會唱🥹我也腦補的是有歪門聲音的4'40\u0026quot;版。「如果 禍與福都躲不過 就每天當沒明天 捉緊愛人過」是我之前就非常喜歡的一句詞，這次聽的時候腦中又是狂風暴雨巨浪滔天，只得浮木一條給我抱緊T T 彈唱了膾炙人口的國語歌，但我基本沒聽過\u0026hellip;\n友：你那會兒大概還在小學，可是真的很多人聽過啊！\n我：小學我大概還在玩泥巴還沒聽過如此好的女聲——— 如沐春風 傾下偈，變身許願池燒臘少女 # 雖說平日也看一些粵語片但粵語的詞彙量和熟悉程度始終不夠，大概能聽懂七八成，多的細密的話就略過去了。讓我震驚的是她普通話流利與標準的程度。佢唱完一首便問台下「希望我說普通話的請舉手」看下面一群人在舉手就一個一個地數☝️「1、2、3、4、5..」數完之後笑咪咪地：這些就是我會說的所有普通話啦（哪有，分明國粵語切換自如）\n佢一開口就是軟糯軟糯的：成都的朋友你們好～我愛↗️你→們（四川話）\n可愛，太可愛了。\n翻了翻我渣拍的視頻，佢唱完「許願池的希臘少女」之後閒聊，說「每次唱希臘少女總是會‘想到’\u0026hellip;（搖頭）諗到‘希臘’\u0026hellip;（搖頭）燒臘」 （台下爆笑）\n佢聽到笑就小小聲回頭去求助馮製作人：\u0026hellip;燒臘係咪咁講啊。\n馮製作人一臉懵圈：你是說 siu laap\u0026hellip;\nIvana：siu laap 啊 我好鍾意食嗰啲\u0026hellip;\n馮製作人：啊。\nIvana：———啊！！shao臘！shao臘少女！（笑）（轉向歌詞台開始碎碎唸）食太多燒臘就做唔到\u0026hellip;做唔到少女\u0026hellip;\n（我和友在台下被可愛得一邊怪叫一邊笑得東倒西歪。）\n唱著歌還比個心🫰 可愛 又說到佢開過很多音樂會，有的像是演唱會一樣和觀眾距離很遠，沒辦法和大家聊天，一些音樂會呢就在 livehouse「和大家的距離都很近，我就會很想跟大家說話，嗯」\n一句說完馬上又切換到粵語：「我平時都冇講咁多嘢嘅，但係咧，係音樂會我就好想講多D嘅，即係初回限定我想講多D嘅，我覺得我哋距離好近，好近嘅」「但是呢（切回普通話），這個場地又大了一點，這個是東區音樂現場————啊，感謝這個場地。呃\u0026hellip;有好多好玩的、好吃的」\n我還以為佢講完客套話可以結束了,佢突然指着我們這些後排來了一句: 「誒\u0026hellip;又好似遠咗少少。噉\u0026hellip;我都唔好講咁多」（扭頭走回歌詞台）\n笑死我了，哪裡來的古靈精怪可愛女人！\n安可唱了「下次愛你」。因為好多人都提前離場了沒有等到最後，倒是十分幸運和友衝去了前排看她輕輕唱「待我相信愛是承受便找你」———欸，軒公也唱過喔\u0026hellip;（x\n唯一可惜是沒有等到最最最後合影環節，但那也不太重要啦！ 見到就好，下次再見 ","date":"2024-09-13","externalUrl":null,"permalink":"/posts/Ivana-live-2024/","section":"文章列表📄","summary":"去看了王菀之，記一些記得的事。","title":"聚光燈下｜趁歌舞昇平真高興 來留下記認","type":"posts"},{"content":"","date":"2024-09-13","externalUrl":null,"permalink":"/tags/%E7%9C%8B%E9%BB%9E%E6%BC%94%E5%87%BA/","section":"文章標籤🏷️","summary":"","title":"看點演出","type":"tags"},{"content":"","date":"2024-06-13","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"2024-06-13","externalUrl":null,"permalink":"/series/%E5%BB%BA%E5%80%8B%E5%8D%9A%E5%AE%A2/","section":"Series","summary":"","title":"建個博客","type":"series"},{"content":"——是不是每一個博客主的第一篇博文都會和自己建立博客的心路歷程有關啊。\n說點廢話：\n本篇以及後續的小文均不能算是嚴肅教程，充其量算我的一些記錄，目的是幫助想要建立靜態博客但完全沒有代碼基礎的朋友（我也沒有）少踩一些坑。 我會盡力把自己記憶中建立博客的過程貼上來，但仍可能會出現錯漏和不夠詳細的地方，請閱讀本篇的朋友不吝指正。 本篇的用語爲：繁體中文。 本篇主要內容：安裝 Hugo，並且把你的博客文件夾建起來！ \u0026hellip;何爲 hugo # 請參看HUGO 官方網站 以及HUGO 中文文檔 。\n安裝 hugo # 兩個版本：standard（標準版）與 extended（延展版），推薦安裝 extended edition。\nWindows 系統下安裝 # 目前個人使用 Mac 較多，只細說一下 MacOS 下的安裝方式。之後可能會再把 Win 系統筆電上的安裝截圖補全在這一部分，這會兒暫時不貼啦果咩。 官方安裝說明：Windows 系統下安裝 Windows 系統下需要注意兩點：\n選擇正確的軟件版本 注意添加環境變量 MacOS 系統下安裝 # 官方安裝說明：MacOS 系統下安裝 或許你需要先安裝 Homebrew # 方式 1: 通過終端機安裝\n首先請安裝Homebrew 。command + space搜索“terminal”（終端機），按照官網說明將如下內容貼入終端機：\n/bin/bash -c \u0026quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026quot;\n但，在沒有網絡條件的情況下可能會顯示“failed to connect \u0026hellip;”之類的內容。此時可採用國內鏡像源下載安裝。\n將如下內容複製貼入終端機：\n/bin/zsh -c \u0026quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\u0026quot;\n選擇下載源並輸入密碼安裝即可（我記得我選擇的是中科大的源）。後期替換源就請另外搜索解決辦法啦，這方面我也不是專家\u0026gt;\u0026lt;\n方式 2: pkg 文件安裝\n官網也說了最新版的 4.3.5 可以試試 pkg 文件安裝：https://github.com/Homebrew/brew/releases/tag/4.3.5 拖動安裝即可，簡單快捷！\n安裝完成之後用brew update命令檢查狀態，再試試brew -v查看當前版本，確認 Homebrew 安裝完成。\n安裝 Hugo # 在終端機中輸入brew install hugo，完成後輸入hugo version，如果安裝成功會出現如下代碼：\nhugo v0.123.0-3c8a4713908e48e6523f058ca126710397aa4ed5+extended darwin/arm64 BuildDate=2024-02-19T16:32:38Z VendorInfo=brew\u0026lt;/span\u0026gt; 好了，hugo 安裝成功了，下一步：建立你的博客。\n建個博客\u0026hellip;主題是必須的嗎？ # 首先請確定要安装的文件夹。在終端機中輸入你想要保存博客文件夾的文件夾。比如，Documents（文件），此處示例我選擇存在 Documents 內的 personal 文件夾內。\ncd Documents/personal 輸入hugo new site myblog（“myblog”是你給你的博客文件夾起的名字，請自由地替換）即會出現以下內容：\nCongratulations! Your new Hugo site was created in /Users/Yourname/Documents/personal/myblog. Just a few more steps... 1. Change the current directory to /Users/Yourname/Documents/personal/myblog. 2. Create or install a theme: - Create a new theme with the command \u0026#34;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026#34; - Install a theme from https://themes.gohugo.io/ 3. Edit hugo.toml, setting the \u0026#34;theme\u0026#34; property to the theme name. 4. Create new content with the command \u0026#34;hugo new content \u0026lt;SECTIONNAME\u0026gt;/\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026#34;. 5. Start the embedded web server with the command \u0026#34;hugo server --buildDrafts\u0026#34;. See documentation at https://gohugo.io/. Yourname@YourMacBook personal % 點開 myblog 文件夾，可以發現整體架構大概是這樣的。\nmyblog ├── archetypes │ └── default.md ├── assets ├── content ├── data ├── hugo.html ├── i18n ├── layouts ├── public │ ├── categories │ │ └── index.xml │ ├── index.xml │ ├── sitemap.xml │ └── tags │ └── index.xml ├── static └── themes 博客文件夾分爲：\narchetypes（內容模版框架）\nassets（預設）\ncontent（博文）\ndata（數據，但我不知道裝了什麼因爲我的文件夾目前是空的）\ni18n（多語言支持）\nlayouts（全局樣式）\npublic（保存的編譯完成的 html 文件，同時也是對外發佈的內容）\nstatic（靜態文件）\nthemes（主題）\n此時的博客文件夾光禿禿一片，要添加一個主題才能看到博客效果。你可以選擇前往官方站點Hugo themes 尋找一個你喜歡的主題，按照主題作者的說明來進行安裝使用。\n（本博選用了Puppet 作為母版來進行魔改，但該主題作者已經兩年沒有更新了，所以各位不一定要用這個主題嗷。）\n按照主題作者的說明，可以選擇在根目錄下git init後git clone的方式，也可以簡單粗暴地直接複製整個文件夾的內容到博客文件夾根目錄。\n複製完成後在根目錄中（cd myblog）輸入hugo server，hugo 就開始生成頁面了：\nYourname@MyMacBook-Pro blog % hugo server Watching for changes in /Users/yourname/Documents/personal/myblog/{archetypes,assets,content,data,i18n,layouts,static} Watching for config changes in /Users/yourname/Documents/personal/blog/hugo.toml Start building sites … hugo v0.123.0-3c8a4713908e48e6523f058ca126710397aa4ed5+extended darwin/arm64 BuildDate=2024-02-19T16:32:38Z VendorInfo=brew | EN -------------------+----- Pages | 8 Paginator pages | 0 Non-page files | 0 Static files | 22 Processed images | 0 Aliases | 1 Cleaned | 0 Built in 36 ms Environment: \u0026#34;development\u0026#34; Serving pages from disk Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop 地址欄輸入上方這個地址：http://localhost:1313/，現在你應該就能看到個人網頁的雛形了：\n肆意書寫本不需要太多鋪墊 # 如果對主題沒有什麼特殊要求只是想有個地方寫東西的話，這個時候把標題改改那麼你已經 ready to go 啦！打開根目錄下的 hugo.toml 文件，將標題中的 My New Hugo Site 改成自己喜歡的博客標題。\nbaseURL = \u0026#39;https://example.org/\u0026#39; languageCode = \u0026#39;en-us\u0026#39; title = \u0026#39;My New Hugo Site\u0026#39; 終端機中輸入 \bcd myblog回到根目錄，輸入hugo new posts/my-first-post.md：\n% hugo new posts/my-first-post.md Content \u0026#34;/Users/Yourname/Documents/personal/blog/content/posts/my-first-post.md\u0026#34; created 這篇名爲my-first-post的博文就已經創建成功了。 用編輯器打開這個 markdown 文檔後能看到模版是這樣的：\n+++ title = \u0026#34;My First Post\u0026#34; date = 2024-06-12T23:32:24+08:00 draft = true description = \u0026#34;\u0026#34; subtitle = \u0026#34;\u0026#34; header_img = \u0026#34;\u0026#34; short = false toc = true tags = [] categories = [] series = [] comment = true +++ draft = true 就表示該博文現在是草稿狀態。在下面完成你的博文之後需要把它改成 false，才能成功發佈。\n如果需要存檔頁面，按照主題作者的說明，在content文件夾下新建一個archive文件夾，文件夾中新建index_.md文檔即可顯示存檔頁面，這個頁面會出現在你的主頁，可以直接點擊進入。\n--- title: Archive description: header_img: /img/archive-bg.jpg short: true --- 寫好第一篇博文，一個最簡單的靜態博客就已算成功建立，至於日後賽博房間要如何裝修，刷什麼漆擺什麼物件，就全憑你自己的喜好來，裝修其實是個非常耗時耗精力（當然也非常有趣）的事情，並不一定要急於短時間內搞定。\n主題推薦？和一些廢話 # 除了當前主題，其實個人最想用的是Seven 這個主題，簡潔、優雅又富有設計感，但我幾個月前每次嘗試安裝+魔改就反覆報錯，可能是因爲完全看不懂 tailwind 的緣故，不知道改到哪就開始報錯了\u0026hellip;\n不過最近作者更新了主題，萬一我哪天又想起來折騰去魔改了呢\u0026hellip;？（被拖走）\n謝謝路過的讀者們耐心讀到這裏。下一篇更新會說一下本地博客託管到 github 怎麼操作以及我部署過程中踩的一些坑XD\n","date":"2024-06-13","externalUrl":null,"permalink":"/posts/build-a-blog/install-hugo/","section":"文章列表📄","summary":"萬事開頭難\u0026hellip;(","title":"折騰小記｜如果你也想建個靜態博客：（一）安裝hugo","type":"posts"},{"content":" 關於我 # 一片海。\n寶可夢形態（？）為大蔥鴨（？）偶爾是進化形態蔥遊兵。所以可以稱呼我阿海/阿鴨/鴨鴨\u0026hellip;\u0026hellip;\u0026hellip;\n⬆到底在說什麼\n幾大愛好，無一精通：🎨｜📷｜📖｜🎮\n前情如是 # 建立博客的想法大概始於2019年，比起靜態博客其實我本人更傾向於採用Wordpress、blogspot之類的動態博客平臺，但又實在是很想擁有一個屬於「自己」的清淨地，中途幾經嘗試把 Jekyll、Hexo、Hugo 的相關內容看了無數篇加了無數個收藏夾，到四年後才終於逐漸下定決心：不再反覆折騰主題，選定一個就往前走吧。\n說做就做，不再猶豫了。\n博客名字 # 沒什麼好說的，是大概十年前還用不老歌時我的博客名。也可能某一日就更換啦。\n主題設計 # 本博客主題基於本人審美在 blowfish 主題基礎上小小修改而成。\n但肯定會有很多奇奇怪怪的 bug\u0026hellip; CSS 知識早就還給老師啦，將就看看，我慢慢改——\n一些個人聲明 # 雖然出現這樣情況的幾率不高，但我認為有必要強調：\n本人不同意該博客的所有內容在「未獲許可」和「未被告知」的情況下被收錄、轉載、存檔、二次分發於任何聚合頁面、站點、項目 本博客不支持 RSS 訂閱 本博客未來僅會添加以下站點進入友情鏈接：\n朋友們的站點 我閱覽過 or 長期關注的站點 通過評論 or 郵件交換的站點 本博客不會單向添加友鏈，亦不接受被單向添加友鏈。\n本博客不會添加在境內備案的站點。\n裝修日誌📓 # 待完成\n評論區樣式調整及評論郵件提醒設置 更換本站icon 已完成\n2025-03-28　添加友情鏈接頁面！ 2025-03-17　增加 Twikoo 評論區及文章分類 2025-03-11　調整博客字體至獅尾四季春 、調整字重 2025-02-24　增加個人聲明部分 2024-07-27　博客更換至 blowfish 主題、更換字體 2024-04-07　博客發佈流程自動化(噫,你真的用得上嗎) 2024-04-03　自定義域名 2024-02-12　用 hugo-puppet-theme 主題搭起來了!(ハ?) 留言板📒 # 如果路過的朋友有其他想說的也可以在下方留言~\n想要交換 友情鏈接 的朋友請留下你的網址XD\n網站名、簡介和頭像地址均不是必填項，未填寫則會根據網址自動讀取。\n網站地址：https://imasugu.cc 網站名稱（可選）：東井 簡介（可選）：贈你杯酒共我飲 頭像（可選）：https://imasugu.cc/img/TwemojiOctopus_small.png ","date":"2024-02-12","externalUrl":null,"permalink":"/about/","section":"關於這裡","summary":"\u003ch2 class=\"relative group\"\u003e關於我 \n    \u003cdiv id=\"關於我\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%e9%97%9c%e6%96%bc%e6%88%91\" aria-label=\"定位點\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e一片海。\u003c/strong\u003e\u003cbr\u003e\n寶可夢形態（？）為\u003cstrong\u003e大蔥鴨\u003c/strong\u003e（？）偶爾是進化形態\u003cstrong\u003e蔥遊兵\u003c/strong\u003e。\u003cdel\u003e所以可以稱呼我阿海/阿鴨/鴨鴨\u0026hellip;\u0026hellip;\u0026hellip;\u003c/del\u003e\u003cbr\u003e\n⬆到底在說什麼\u003cbr\u003e\n幾大愛好，無一精通：🎨｜📷｜📖｜🎮\u003c/p\u003e","title":"關於這裡","type":"about"},{"content":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. \u0026#x1f680;\nYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\n","externalUrl":null,"permalink":"/tags/advanced/","section":"文章標籤🏷️","summary":"\u003cp\u003eThis is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. \u0026#x1f680;\u003c/p\u003e\n\u003cp\u003eYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\u003c/p\u003e","title":"Advanced","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"嘗試著做了自動讀取信息的卡片。這樣就不用擔心頭像更新的問題了———\n收錄我有趣又才華橫溢的朋友們 ٩(ˊᗜˋ*)و\n","externalUrl":null,"permalink":"/friends/","section":"有趣的人們✨","summary":"\u003cp\u003e嘗試著做了自動讀取信息的卡片。這樣就不用擔心頭像更新的問題了———\u003c/p\u003e\n\u003cp\u003e收錄我有趣又才華橫溢的朋友們 ٩(ˊᗜˋ*)و\u003c/p\u003e","title":"有趣的人們✨","type":"friends"}]